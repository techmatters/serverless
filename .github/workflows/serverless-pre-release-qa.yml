# Workflow to create a new pre-release with qa suffix

name: Pre-release QA

# Controls when the action will run.
on:
  workflow_dispatch:
    inputs:
      tag-prefix:
        description: Release tag name.
        required: true
      title:
        description: Release title - The title that will be given to this pre-release.
        required: true

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      # The next big chunk is to deploy (ugh, we really should trigger workflows from workflows)

      # Setup credentials to access AWS for parameters
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      # Get AWS parameters to setup environment variables for Serverless function
      - name: Set Twilio Sync API key
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_API_KEY
          env_variable_name: "SYNC_SERVICE_API_KEY"
      - name: Set Twilio Chat service ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_CHAT_SERVICE_SID
          env_variable_name: "CHAT_SERVICE_SID"
      - name: Set Twilio Chat transfer workflow ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_CHAT_WORKFLOW_SID
          env_variable_name: "TWILIO_CHAT_TRANSFER_WORKFLOW_SID"
      - name: Set Twilio Sync API secret
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_SECRET
          env_variable_name: "SYNC_SERVICE_API_SECRET"
      - name: Set Twilio Sync service ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_SYNC_SID
          env_variable_name: "SYNC_SERVICE_SID"
      - name: Set Twilio Workspace ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_WORKSPACE_SID
          env_variable_name: "TWILIO_WORKSPACE_SID"
      - name: Set operating information file key
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_OPERATING_INFO_KEY
          env_variable_name: "OPERATING_INFO_KEY"
      - name: Set Twilio Flex Proxy service ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_FLEX_PROXY_SERVICE_SID
          env_variable_name: "FLEX_PROXY_SERVICE_SID"
      - name: Set HRM static key to make HRM calls
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_HRM_STATIC_KEY
          env_variable_name: "HRM_STATIC_KEY"
      - name: Set Survey Workflow SID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_SURVEY_WORKFLOW_SID
          env_variable_name: "SURVEY_WORKFLOW_SID"
      - name: Set Post Survey Bot Programmable Chat URL
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_POST_SURVEY_BOT_CHAT_URL
          env_variable_name: "POST_SURVEY_BOT_CHAT_URL"
      - name: Set AWS credentials for Aselo user
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "ASELO_APP_ACCESS_KEY"
          env_variable_name: "ASELO_APP_ACCESS_KEY"
      - name: Set AWS credentials for Aselo user
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "ASELO_APP_SECRET_KEY"
          env_variable_name: "ASELO_APP_SECRET_KEY"
      - name: AWS region where Aselo documents bucket is hosted
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "REGION"
          env_variable_name: "AWS_REGION"
      - name: Set S3 bucket name where Aselo documents are stored
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: DEV_TWILIO_E2E_S3_BUCKET_DOCS
          env_variable_name: "S3_BUCKET"
      # Call main-action to compile and deploy
      - name: Executing main-action
        uses: ./.github/actions/main-action
        with:
          account-sid: ${{ secrets.E2E_DEV_ACCOUNT_SID }}
          auth-token: ${{ secrets.E2E_DEV_AUTH_TOKEN }}
          workspace-sid: $TWILIO_WORKSPACE_SID
          transfer-workflow-sid: $TWILIO_CHAT_TRANSFER_WORKFLOW_SID
          sync-service-api-key: $SYNC_SERVICE_API_KEY
          sync-service-api-secret: $SYNC_SERVICE_API_SECRET
          sync-service-sid: $SYNC_SERVICE_SID
          chat-service-sid: $CHAT_SERVICE_SID
          operating-info-key: $OPERATING_INFO_KEY
          flex-proxy-service-sid: $FLEX_PROXY_SERVICE_SID
          hrm-static-key: $HRM_STATIC_KEY
          survey-workflow-sid: $SURVEY_WORKFLOW_SID
          post-survey-bot-chat-url: $POST_SURVEY_BOT_CHAT_URL
          aselo-app-access-key: $ASELO_APP_ACCESS_KEY
          aselo-app-secret-key: $ASELO_APP_SECRET_KEY
          aws-region: $AWS_REGION
          s3-bucket: $S3_BUCKET

      # Clone flex-plugins repo
      - name: Create appConfig.js
        run: git clone https://github.com/techmatters/flex-plugins
        shell: bash
      # Build Playwright
      - name: Install e2e-tests dependencies
        run: npm install
        working-directory: ./flex-plugins/e2e-tests
      - name: Setup dependencies for playwright/browsers
        uses: microsoft/playwright-github-action@v1
      - name: Install Playwright CLI
        run: npx playwright install
        working-directory: ./flex-plugins/e2e-tests
      # Run E2E tests against actual E2E Flex instance
      - name: Run Playwright tests
        run: DEBUG=pw:api PLAYWRIGHT_BASEURL=${{secrets.PLAYWRIGHT_BASEURL_E2E}} PLAYWRIGHT_USER_USERNAME=${{secrets.PLAYWRIGHT_USER_USERNAME}} PLAYWRIGHT_USER_PASSWORD=${{secrets.PLAYWRIGHT_USER_PASSWORD}} TWILIO_ACCOUNT_SID=${{secrets.E2E_DEV_ACCOUNT_SID}} TWILIO_AUTH_TOKEN=${{secrets.E2E_DEV_AUTH_TOKEN}} npx playwright test
        working-directory: ./flex-plugins/e2e-tests
      # Upload artifacts
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-artifacts
          path: e2e-tests/test-results
